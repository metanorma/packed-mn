name: linux-with-tebako-packager

on:
  push:
    branches: [ maxirmx-tebako-packager ]
    tags: [ '*' ]
  pull_request:
    paths-ignore:
      - .github/workflows/linux.yml
      - .github/workflows/macos.yml
      - .github/workflows/windows.yml
      - .github/workflows/release_tag.yml
      - Makefile.win

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
# Customize tebako build type here 
  BUILD_TYPE: Release
# The folders
  TEBAKO: tebako
  DEPS: deps
# Versions
  TEBAKO_TAG: maxirmx-issue-23
  RUBY_VER:   "2.7.4"
  RUBY_HASH:  "3043099089608859fc8cce7f9fdccaa1f53a462457e3838ec3b25a7d609fbc5b"
  BUNDLER_VER: "2.2.3"
#  
  CC: clang
  CXX: clang++

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - uses: metanorma/metanorma-build-scripts/gh-rubygems-setup-action@master
      with:
        token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}

    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install -y \
        ronn binutils-dev libarchive-dev libevent-dev libjemalloc-dev acl-dev libxml2-dev \
        libdouble-conversion-dev libiberty-dev liblz4-dev liblzma-dev libssl-dev \
        libboost-context-dev libboost-filesystem-dev libboost-program-options-dev \
        libboost-regex-dev libboost-system-dev libboost-thread-dev \
        libunwind-dev libdwarf-dev libelf-dev libfmt-dev libfuse3-dev libgoogle-glog-dev \
        libffi-dev libgdbm-dev libyaml-dev libncurses-dev libreadline-dev libsqlite3-dev \
        texinfo

    - run: |
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 100

    - run: |
        curl -Lks 'https://git.io/rg-ssl' | ruby
        echo "perl -v: $(perl -v)"
        echo "clang -v: $(clang -v)"
        echo "clang++ -v: $(clang -v)"

    - name: enable swap
      run: |
        sudo fallocate -l 15g /compile.swap
        sudo chmod 600 /compile.swap
        sudo mkswap /compile.swap
        sudo swapon /compile.swap
        sudo swapon --all --verbose

    - name: Checkout tebako packaging environment
      uses: actions/checkout@v2
      with:
        repository: tamatebako/tebako
        path: ${{ env.TEBAKO }}
        ref: ${{ env.TEBAKO_TAG }}
        fetch-depth: 0


    - name: Create deps folder and cache key
      run: |
        mkdir -p -v ${{ github.workspace }}/${{ env.TEBAKO }}/${{ env.DEPS }}
        echo "Keys" > key.txt
        echo  ${{ env.TEBAKO_TAG }} >> key.txt
        echo  ${{ env.RUBY_HASH }} >> key.txt

    - name: Process cache
      id: cache
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/${{ env.TEBAKO }}/${{ env.DEPS }}
        key: ${{ github.workflow }}-${{ matrix.os }}-${{ matrix.env.CC }}-${{ hashFiles('key.txt') }}-v01

    - name: tebako setup
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pushd ${{github.workspace}}/${{ env.TEBAKO }}
        bin/tebako setup
        popd


#    - run: make build/metanorma
#      timeout-minutes: 180
      # https://trac.sagemath.org/ticket/19762
#      env:
#        CC: /usr/bin/clang
#        CXX: /usr/bin/clang++

#    - run: build/metanorma help

#    - uses: actions/upload-artifact@v2
#      with:
#        name: metanorma-linux
#        path: build/metanorma

    - name: prepare cache
      if: steps.cache.outputs.cache-hit != 'true'
      run:  |
        rm -rf ${{github.workspace}}/${{ env.TEBAKO }}/${{ env.DEPS }}/src/_ruby*
        pushd ${{github.workspace}}/${{ env.TEBAKO }}
        bin/tebako setup
        popd
