name: linux

on:
  push:
    branches: [ main ]
    tags: [ v* ]
    paths-ignore:
      - .github/workflows/macos.yml
      - .github/workflows/windows.yml
      - .github/workflows/release_tag.yml
      - Makefile.win
  pull_request:
    paths-ignore:
      - .github/workflows/macos.yml
      - .github/workflows/windows.yml
      - .github/workflows/release_tag.yml
      - Makefile.win

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CACHE_VER: 02
  OS_VER: "ubuntu-18.04"
  BUILD_TYPE: Release
  CC: gcc
  CXX: g++
# The folders
  TEBAKO_DIR: tebako
  DEPS: deps
# Versions
  TEBAKO_TAG: "v0.2.3"
  RUBY_VER:   "2.7.4"
  RUBY_HASH:  "3043099089608859fc8cce7f9fdccaa1f53a462457e3838ec3b25a7d609fbc5b"
  BUNDLER_VER: "2.2.3"

jobs:
  setup:
    runs-on: ubuntu-18.04
    steps:
      - name: Switch to gcc-9
# Note. This step is required on ubuntu-18 only.  GHA ubuntu-20 works off-the-shelf 
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
          sudo update-alternatives --set gcc /usr/bin/gcc-9

      - name: Install packages
        run: |
          sudo apt-get -y update
          sudo apt-get -y install \
          binutils-dev libarchive-dev libevent-dev libjemalloc-dev acl-dev \
          libdouble-conversion-dev libiberty-dev liblz4-dev liblzma-dev libssl-dev \
          libboost-context-dev libboost-filesystem-dev libboost-program-options-dev \
          libboost-regex-dev libboost-system-dev libboost-thread-dev \
          libunwind-dev libdwarf-dev libelf-dev libfuse-dev libgoogle-glog-dev \
          libffi-dev libgdbm-dev libyaml-dev libncurses-dev libreadline-dev \
          libsqlite3-dev

      - name: Update libfmt (bionic)
# Note. ppa:team-xbmc is required on ubuntu-18 only.  GHA ubuntu-20 will work with 'sudo apt-get install libfmt-dev'
        run: |
          sudo apt-get -y remove libfmt-dev
          sudo apt-get -y install software-properties-common
          sudo add-apt-repository ppa:team-xbmc/ppa
          sudo apt-get -y update
          sudo apt-get -y install libfmt-dev

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VER }}
          bundler: ${{ env.BUNDLER_VER }}

      - name: Install ronn
        run: sudo gem install ronn

      - name: Checkout tebako packaging environment
        uses: actions/checkout@v2
        with:
          repository: tamatebako/tebako
          path: ${{ env.TEBAKO_DIR }}
          ref: ${{ env.TEBAKO_TAG }}

      - name: Create deps folder
        run: mkdir -p -v ${{ env.TEBAKO_DIR }}/${{ env.DEPS }}

      - name: Process cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.TEBAKO_DIR }}/${{ env.DEPS }}
          key: ${{ github.workflow }}-${{ env.OS_VER }}-${{ env.CC }}-${{ env.TEBAKO_TAG }}-${{ env.RUBY_HASH }}-v${{ env.CACHE_VER }}

      - name: tebako setup
        if: steps.cache.outputs.cache-hit != 'true'
        run: ${{ env.TEBAKO_DIR }}/bin/tebako setup

  build:
    runs-on: ubuntu-18.04
    needs: setup
    steps:
      - uses: actions/checkout@v2

# ---------- Start of tebako prerequisites    
      - name: Switch to gcc-9
# Note. This step is required on ubuntu-18 only.  GHA ubuntu-20 works off-the-shelf 
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
          sudo update-alternatives --set gcc /usr/bin/gcc-9

      - name: Install packages
        run: |
          sudo apt-get -y update
          sudo apt-get -y install \
          binutils-dev libarchive-dev libevent-dev libjemalloc-dev acl-dev \
          libdouble-conversion-dev libiberty-dev liblz4-dev liblzma-dev libssl-dev \
          libboost-context-dev libboost-filesystem-dev libboost-program-options-dev \
          libboost-regex-dev libboost-system-dev libboost-thread-dev \
          libunwind-dev libdwarf-dev libelf-dev libfuse-dev libgoogle-glog-dev \
          libffi-dev libgdbm-dev libyaml-dev libncurses-dev libreadline-dev 

      - name: Update libfmt (bionic)
# Note. ppa:team-xbmc is required on ubuntu-18 only.  GHA ubuntu-20 will work with 'sudo apt-get install libfmt-dev'
        run: |
          sudo apt-get -y remove libfmt-dev
          sudo apt-get -y install software-properties-common
          sudo add-apt-repository ppa:team-xbmc/ppa
          sudo apt-get -y update
          sudo apt-get -y install libfmt-dev

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VER }}
          bundler: ${{ env.BUNDLER_VER }}

      - name: Install ronn
        run: sudo gem install ronn

      - name: Checkout tebako packaging environment
        uses: actions/checkout@v2
        with:
          repository: tamatebako/tebako
          path: ${{ env.TEBAKO_DIR }}
          ref: ${{ env.TEBAKO_TAG }}

      - name: Create deps folder
        run: mkdir -p -v ${{ env.TEBAKO_DIR }}/${{ env.DEPS }}

      - name: Process cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.TEBAKO_DIR }}/${{ env.DEPS }}
          key: ${{ github.workflow }}-${{ env.OS_VER }}-${{ env.CC }}-${{ env.TEBAKO_TAG }}-${{ env.RUBY_HASH }}-v${{ env.CACHE_VER }}

      - name: Check cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Failed to load cache"
          false
# ------- End of tebako prerequisites    

      - uses: metanorma/metanorma-build-scripts/gh-rubygems-setup-action@master
        with:
          token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}

# ???  Tebako deploys gems in prisitine environment anyway     
#      This does not look useful but I can be wrong
#      - run: bundle update --all

      - run: |
          curl -Lks 'https://git.io/rg-ssl' | ruby
          echo "perl -v: $(perl -v)"
          echo "cc -v: $($CC -v)"
          echo "CXX -v: $($CXX -v)"

      - name: package metanorma
        run: bin/build-with-tebako.sh

      - uses: actions/upload-artifact@v2
        with:
         name: metanorma-tebako-linux
         path: build/metanorma

      - name: smoke test
        run: build/metanorma help

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.ignore-errors }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04 ]
        ignore-errors: [ false ]
        test-flavor:
          - iso
          - cc
          - un
          - iec
          - csa
          - bipm
          - ietf
          - ogc
        include:
          - os: ubuntu-18.04
            test-flavor: m3aawg
            ignore-errors: true
          - os: ubuntu-18.04
            test-flavor: jcgm
            ignore-errors: true
          - os: ubuntu-18.04
            test-flavor: itu
            ignore-errors: true
          - os: ubuntu-18.04
            test-flavor: iho
            ignore-errors: true
          - os: ubuntu-20.04
            test-flavor: m3aawg
            ignore-errors: true
          - os: ubuntu-20.04
            test-flavor: jcgm
            ignore-errors: true
          - os: ubuntu-20.04
            test-flavor: itu
            ignore-errors: true
          - os: ubuntu-20.04
            test-flavor: iho
            ignore-errors: true
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: metanorma-tebako-linux
          path: build

      - uses: actions/cache@v2
        with:
          path: ~/.relaton
          key: relaton-linux-${{ matrix.test-flavor }}
          restore-keys: relaton-linux-${{ matrix.test-flavor }}

      - run: chmod +x build/metanorma

      - name: Test processing for ${{ matrix.test-flavor }}
        timeout-minutes: 45
        run: make test-flavor-with-tebako
        env:
          GITHUB_CREDENTIALS: "metanorma-ci:${{ secrets.METANORMA_CI_PAT_TOKEN }}"
          TEST_FLAVOR: ${{ matrix.test-flavor }}

      - uses: actions/upload-artifact@v2
        with:
          name: site
          path: site/**

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: metanorma-tebako-linux
          path: build

      - name: Set release binary permissions
        run: |
          mv build/metanorma metanorma-linux-x64
          chmod a+x metanorma-linux-x64
          tar -czvf metanorma-linux-x64.tgz metanorma-linux-x64

      - run: sha256sum metanorma-linux-x64.tgz > metanorma-linux-x64.tgz.sha256.txt

      - uses: softprops/action-gh-release@v1
        with:
          files: |
            metanorma-linux-x64.tgz
            metanorma-linux-x64.tgz.sha256.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - uses: peter-evans/repository-dispatch@v1
      #   with:
      #     token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}
      #     repository: metanorma/metanorma-snap
      #     event-type: ${{ github.repository }}
      #     client-payload: '{ "ref": "${{ github.ref }}" }'
