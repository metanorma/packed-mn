name: linux

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    paths-ignore:
      - .github/workflows/macos.yml
      - .github/workflows/windows.yml
      - .github/workflows/release_tag.yml
      - Makefile.win

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
# Customize tebako build type here
  BUILD_TYPE: Release
# The folders
  TEBAKO_DIR: tebako
  DEPS: deps
# Versions
  TEBAKO_TAG: maxirmx-issue-23
  RUBY_VER:   "2.7.4"
  RUBY_HASH:  "3043099089608859fc8cce7f9fdccaa1f53a462457e3838ec3b25a7d609fbc5b"
  BUNDLER_VER: "2.2.3"

jobs:
  build:
    name: ${{ matrix.os }} [CC ${{ matrix.env.CC }}]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        env:
          - CC: gcc
            CXX: g++
          - CC: clang
            CXX: clang++

    if: "!contains(github.event.head_commit.message, 'skip ci')"
    env: ${{ matrix.env }}
    steps:
    - uses: actions/checkout@v2

    - uses: metanorma/metanorma-build-scripts/gh-rubygems-setup-action@master
      with:
        token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VER }}
        bundler: ${{ env.BUNDLER_VER }}
        bundler-cache: true

    - run: bundle update --all

    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          ronn binutils-dev libarchive-dev libevent-dev libjemalloc-dev acl-dev libxml2-dev \
          libdouble-conversion-dev libiberty-dev liblz4-dev liblzma-dev libssl-dev \
          libboost-context-dev libboost-filesystem-dev libboost-program-options-dev \
          libboost-regex-dev libboost-system-dev libboost-thread-dev \
          libunwind-dev libdwarf-dev libelf-dev libfmt-dev libfuse3-dev libgoogle-glog-dev \
          libffi-dev libgdbm-dev libyaml-dev libncurses-dev libreadline-dev libsqlite3-dev \
          texinfo

#    - run: |
#        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100
#        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 100

    - run: |
        curl -Lks 'https://git.io/rg-ssl' | ruby
        echo "perl -v: $(perl -v)"
        echo "cc -v: $($CC -v)"
        echo "CXX -v: $($CXX -v)"

    - name: enable swap
      run: |
        sudo fallocate -l 15g /compile.swap
        sudo chmod 600 /compile.swap
        sudo mkswap /compile.swap
        sudo swapon /compile.swap
        sudo swapon --all --verbose

    - name: Checkout tebako packaging environment
      uses: actions/checkout@v2
      with:
        repository: tamatebako/tebako
        path: ${{ env.TEBAKO_DIR }}
        ref: ${{ env.TEBAKO_TAG }}
        fetch-depth: 0

    - name: Create deps folder and cache key
      run: |
        mkdir -p -v ${{ env.TEBAKO_DIR }}/${{ env.DEPS }}
        echo "Keys" > key.txt
        echo  ${{ env.TEBAKO_DIR_TAG }} >> key.txt
        echo  ${{ env.RUBY_HASH }} >> key.txt

    - name: Process cache
      id: cache
      uses: actions/cache@v2
      with:
        path: ${{ env.TEBAKO_DIR }}/${{ env.DEPS }}
        key: ${{ github.workflow }}-${{ matrix.os }}-${{ matrix.env.CC }}-${{ hashFiles('key.txt') }}-v01

    - name: tebako setup
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pushd ${{ env.TEBAKO_DIR }}
        bin/tebako setup
        popd

    - name: package metanorma
      timeout-minutes: 180
      run: |
        bin/build-with-tebako.sh

    - uses: actions/upload-artifact@v2
      with:
        name: metanorma-tebako-linux
        path: ${{ env.TEBAKO_DIR }}/build/metanorma

    - name: run 'metanorma help'
      run: ${{ env.TEBAKO_DIR }}/build/metanorma help

    - name: run 'metanorma version'
      run:  ${{ env.TEBAKO_DIR }}/build/metanorma version

    - name: run 'metanorma list-doctypes'
      run: ${{ env.TEBAKO_DIR }}/build/metanorma list-doctypes

    - name: run 'metanorma list-extensions'
      run: ${{ env.TEBAKO_DIR }}/build/metanorma list-extensions

    - name: Checkout metanorma/iso-19156
      uses: actions/checkout@v2
      with:
        repository: metanorma/iso-19156
        path: iso-19156
        fetch-depth: 1

    - name: Generate iso-19156
      run: |
        cd iso-19156
        ../${{ env.TEBAKO_DIR }}/build/metanorma site generate --agree-to-term

    - name: prepare cache
      if: steps.cache.outputs.cache-hit != 'true'
      run:  |
        rm -rf ${{ env.TEBAKO_DIR }}/${{ env.DEPS }}/src/_ruby*
        pushd ${{ env.TEBAKO_DIR }}
        bin/tebako setup
        popd

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.ignore-errors }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04 ]
        ignore-errors: [ false ]
        test-flavor:
          - iso
          - cc
          - un
          - iec
          - csa
          - bipm
          - ietf
        include:
          - os: ubuntu-18.04
            test-flavor: m3aawg
            ignore-errors: true
          - os: ubuntu-18.04
            test-flavor: jcgm
            ignore-errors: true
          - os: ubuntu-18.04
            test-flavor: itu
            ignore-errors: true
          - os: ubuntu-18.04
            test-flavor: iho
            ignore-errors: true
          - os: ubuntu-18.04
            test-flavor: ogc
            ignore-errors: true
          - os: ubuntu-20.04
            test-flavor: m3aawg
            ignore-errors: true
          - os: ubuntu-20.04
            test-flavor: jcgm
            ignore-errors: true
          - os: ubuntu-20.04
            test-flavor: itu
            ignore-errors: true
          - os: ubuntu-20.04
            test-flavor: iho
            ignore-errors: true
          - os: ubuntu-20.04
            test-flavor: ogc
            ignore-errors: true
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: metanorma-tebako-linux
          path: build

      - run: |
          chmod +x build/metanorma

      - name: Test processing for ${{ matrix.test-flavor }}
        timeout-minutes: 45
        run: make test-flavor
        env:
          GITHUB_CREDENTIALS: "metanorma-ci:${{ secrets.METANORMA_CI_PAT_TOKEN }}"
          TEST_FLAVOR: ${{ matrix.test-flavor }}

      - uses: actions/upload-artifact@v2
        with:
          name: site
          path: site/**

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: metanorma-tebako-linux
          path: build

      - name: Set release binary permissions
        run: |
          mv build/metanorma metanorma-linux-x64
          chmod a+x metanorma-linux-x64
          tar -czvf metanorma-linux-x64.tgz metanorma-linux-x64

      - run: sha256sum metanorma-linux-x64.tgz > metanorma-linux-x64.tgz.sha256.txt

      - uses: softprops/action-gh-release@v1
        with:
          files: |
            metanorma-linux-x64.tgz
            metanorma-linux-x64.tgz.sha256.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - uses: peter-evans/repository-dispatch@v1
      #   with:
      #     token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}
      #     repository: metanorma/metanorma-snap
      #     event-type: ${{ github.repository }}
      #     client-payload: '{ "ref": "${{ github.ref }}" }'
